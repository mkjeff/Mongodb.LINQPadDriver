# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
# top-most EditorConfig file
root = true

[*.js]
charset = utf-8
indent_style = space
indent_size = 2
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true

[*.cs]
indent_style                                                       = space
indent_size                                                        = 4
end_of_line                                                        = lf
charset                                                            = utf-8
trim_trailing_whitespace                                           = true
insert_final_newline                                               = true
dotnet_sort_system_directives_first                                = true

# this. and Me. preferences
dotnet_style_qualification_for_field                               = false : warning
dotnet_style_qualification_for_property                            = false : warning
dotnet_style_qualification_for_method                              = false : warning
dotnet_style_qualification_for_event                               = false : warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members         = true : error
dotnet_style_predefined_type_for_member_access                     = true : error

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators            = always_for_clarity:error
dotnet_style_parentheses_in_other_binary_operators                 = always_for_clarity:error
dotnet_style_parentheses_in_other_operators                        = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators            = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers                       = always:warning

# Expression-level preferences
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_throw_expression = true:suggestion
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:error
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:silent
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = true:silent
csharp_style_expression_bodied_methods = true:silent
csharp_style_expression_bodied_operators = true:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:error

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# constant variable
dotnet_naming_style.const_style.capitalization                     = pascal_case

dotnet_naming_symbols.const_symbol.applicable_kinds                = field
dotnet_naming_symbols.const_symbol.applicable_accessibilities      = *
dotnet_naming_symbols.const_symbol.required_modifiers              = const

dotnet_naming_rule.const_variable.symbols                          = const_symbol
dotnet_naming_rule.const_variable.style                            = const_style
dotnet_naming_rule.const_variable.severity                         = error

# static variable
dotnet_naming_style.static_style.capitalization                     = pascal_case

dotnet_naming_symbols.static_symbol.applicable_kinds                = field
dotnet_naming_symbols.static_symbol.applicable_accessibilities      = *
dotnet_naming_symbols.static_symbol.required_modifiers              = static

dotnet_naming_rule.static_variable.symbols                          = static_symbol
dotnet_naming_rule.static_variable.style                            = static_style
dotnet_naming_rule.static_variable.severity                         = error

# private field must start with underscore (private_field_with_underscore)
dotnet_naming_style.underscore_prefix_style.capitalization         = camel_case
dotnet_naming_style.underscore_prefix_style.required_prefix        = _

dotnet_naming_symbols.private_fields.applicable_kinds              = field
dotnet_naming_symbols.private_fields.applicable_accessibilities    = private,protected

dotnet_naming_rule.private_field_with_underscore.symbols           = private_fields
dotnet_naming_rule.private_field_with_underscore.style             = underscore_prefix_style
dotnet_naming_rule.private_field_with_underscore.severity          = error

# interface type name must start with 'I' (interface_types_with_I)
dotnet_naming_style.start_with_I_style.capitalization              = pascal_case
dotnet_naming_style.start_with_I_style.required_prefix             = I

dotnet_naming_symbols.interface_types.applicable_kinds             = interface

dotnet_naming_rule.interface_types_with_I.symbols                  = interface_types
dotnet_naming_rule.interface_types_with_I.style                    = start_with_I_style
dotnet_naming_rule.interface_types_with_I.severity                 = error

# async method must end with 'Async' (async_method)
dotnet_naming_style.async_suffix_style.capitalization              = pascal_case
dotnet_naming_style.async_suffix_style.required_suffix             = Async

dotnet_naming_symbols.async_method.applicable_kinds                = method
dotnet_naming_symbols.any_async_methods.applicable_accessibilities = *
dotnet_naming_symbols.async_method.required_modifiers              = async

dotnet_naming_rule.async_method.symbols                            = async_method
dotnet_naming_rule.async_method.style                              = async_suffix_style
dotnet_naming_rule.async_method.severity                           = error
